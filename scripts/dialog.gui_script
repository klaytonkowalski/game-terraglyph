local h_str = require "modules.h_str"
local dtypewriter = require "dtypewriter.dtypewriter"
local monarch = require "monarch.monarch"

local _command_hook

function init(self)
	msg.post(msg.url(), h_str.acquire_input_focus)
	dtypewriter.init(h_str.node_dialog_background, h_str.font_monogram, 5, 1, 226, 3, 2, msg.url())
	dtypewriter.set_default_type_speed(30)
end

function on_input(self, action_id, action)
	if action.pressed then
		if action_id == h_str.key_z or action_id == h_str.key_x then
			if dtypewriter.is_waiting() then
				dtypewriter.continue()
			elseif dtypewriter.is_complete() then
				if _command_hook then
					msg.post(msg.url(h_str.collection_main, hash("/event"), "script"), h_str.message_unhook_command, { hook = _command_hook })
					_command_hook = nil
				end
			end
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == dtypewriter.messages.start then
		gui.set_enabled(gui.get_node(h_str.node_dialog_background), true)
	elseif message_id == dtypewriter.messages.type then
	elseif message_id == dtypewriter.messages.wait then
		gui.set_enabled(gui.get_node(h_str.node_spinner), true)
	elseif message_id == dtypewriter.messages.continue then
		gui.set_enabled(gui.get_node(h_str.node_spinner), false)
	elseif message_id == dtypewriter.messages.complete then
		gui.set_enabled(gui.get_node(h_str.node_spinner), true)
	elseif message_id == h_str.message_command_load_dialog then
		dtypewriter.load(message.text)
	elseif message_id == h_str.message_command_start_dialog then
		dtypewriter.start()
		_command_hook = message.hook
	elseif message_id == h_str.message_command_close_dialog then
		gui.set_enabled(gui.get_node(h_str.node_dialog_background), false)
		gui.set_enabled(gui.get_node(h_str.node_spinner), false)
		dtypewriter.clear()
		monarch.back()
	end
end